package LinkedList;

public class DoublyLinkedList {
	
	Neighbour firstLink;
	Neighbour lastLink;
	
	public void insertInFirstPosition(String homeOwner , int houseNumber)
	{
		Neighbour theNewLink = new Neighbour(homeOwner, houseNumber);
		if(isEmpty())
		{
			lastLink = theNewLink;
		}
		
		theNewLink.next=firstLink;
		firstLink=theNewLink;
		
	}
	
	
	public void insertInLastPosition(String homeOwner , int houseNumber)
	{
		Neighbour theNewLink = new Neighbour(homeOwner, houseNumber);
		if(isEmpty())
		{
			firstLink = theNewLink;
		}
		else
		{
		lastLink.next=theNewLink;	
	}
		lastLink = theNewLink;

}
	public boolean isEmpty()
	{
		return (firstLink==null);
	}

	public static void main(String[] args) {
		DoublyLinkedList obj = new DoublyLinkedList();
		
		obj.insertInFirstPosition("house owner1", 001);
		obj.insertInFirstPosition("house owner2", 002);
		obj.insertInLastPosition("house owner3", 003);
		obj.insertInFirstPosition("house owner4", 004);
		
		obj.display();
	}
	public void display()
	{
		Neighbour theLink = firstLink;
		while (theLink!=null) {
			theLink.display();
			System.out.println("Next Link : "+theLink.next);
			theLink = theLink.next;
			
		}
	}
class Neighbour  
{
	public String homeOwnerName;
	public int houseNumber;
	
	public Neighbour next;
	public Neighbour previous;
	
	public Neighbour(String homeOwnerName, int houseNumber) {
		// TODO Auto-generated constructor stub
		this.homeOwnerName=homeOwnerName;
		this.houseNumber=houseNumber;
	}


public void display()
{
	System.out.println(homeOwnerName + ":"+houseNumber + "privet Drive");
}

public String toString()
{
	return homeOwnerName;
	
}
}
}
